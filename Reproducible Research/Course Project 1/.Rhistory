setwd("D:/My Documents/GitHub/Reproducible Research/Course Project 1")
library(ggplot2)
activity <- read.csv("activity.csv")
activity$date <-as.Date(activity$date)
dailySteps <- tapply(activity$steps, activity$date, FUN = sum, na.rm = TRUE)
qplot(dailySteps, binwidth=1000, xlab="total number of steps taken each day")
averSteps <- aggregate(activity$steps ~ activity$interval, FUN = mean, na.rm = TRUE)
ggplot(averSteps, aes(x = interval, y =steps)) +geom_line() + xlab("5-minute interval") + ylab("Average number of steps taken")
maxInterval <- averSteps[which.max(averSteps$steps),]
#Calculating the average daily activity pattern
averSteps <- aggregate(activity$steps ~ activity$interval, FUN = mean, na.rm = TRUE)
ggplot(averSteps, aes(x = interval, y =steps)) +geom_line() + xlab("5-minute interval") + ylab("Average number of steps taken")
maxInterval <- averSteps[which.max(averSteps$steps),]
#Inputting missing values and generate new dataset
missing <- is.na(activity$steps)
summary(missing)
fill.value <- function(steps, interval)
{
filled <- NA
if(!is.na(steps))
filled <- c(steps)
else filled <-(averSteps[averSteps$interval == interval, "steps"])
return(filled)
}
filled.activity <- activity
filled.activity$steps <- mapply(fill.value, filled.activity$steps, filled.activity$interval)
filled.dailySteps <- tapply(filled.activity$steps, filled.activity$date, FUN = sum)
qplot(filled.dailySteps, binwidth = 1000, xlab = "total number of filled steps per day")
source('~/GitHub/Reproducible Research/Course Project 1/Reproducible Research Project 1.R')
dailySteps
str(dailySteps)
dailySteps <- tapply(activity$steps, activity$date, FUN = sum, na.rm = TRUE)
qplot(dailySteps, binwidth=1000, xlab="total number of steps taken each day")
averSteps <- aggregate(activity$steps ~ activity$interval, FUN = mean, na.rm = TRUE)
ggplot(averSteps, aes(x = interval, y =steps)) +geom_line() + xlab("5-minute interval") + ylab("Average number of steps taken")
averSteps
ggplot(averSteps, aes(x = averSteps$interval, y = averSteps$steps)) +geom_line() + xlab("5-minute interval") + ylab("Average number of steps taken")
ggplot(averSteps, aes(x = averSteps$interval, y = averSteps$steps)) +geom_line() +
xlab("5-minute interval") + ylab("Average number of steps taken")
averSteps <- aggregate(activity$steps ~ activity$interval, FUN = mean, na.rm = TRUE)
averSteps
ggplot(averSteps, aes(x = averSteps$interval, y = averSteps$steps)) +geom_line() +
xlab("5-minute interval") + ylab("Average number of steps taken")
ggplot(averSteps, aes(x = averSteps$interval, y = averSteps$steps) +geom_line() +
xlab("5-minute interval") + ylab("Average number of steps taken")
)
ggplot(averSteps, aes(x = averSteps$interval, y = averSteps$steps) +geom_line() +
xlab("5-minute interval") + ylab("Average number of steps taken"))
ggplot(averSteps$interval, averSteps$steps +geom_line() +
xlab("5-minute interval") + ylab("Average number of steps taken"))
ggplot(averSteps, aes(x = interval, y = steps) +geom_line() +
xlab("5-minute interval") + ylab("Average number of steps taken"))
ggplot(averSteps)
ggplot(averSteps, aes(x = interval, y = steps))
